// ======================================================================
// graphql-API 문제
// ======================================================================
// http://backend-example.codebootcamp.co.kr/graphql 에서 제공하는 API를 사용하세요.
// ======================================================================

1) 철수의 나이는 몇살인가요?(나이만 조회해 주세요.) -> 12살

2) 영희의 학교는 어디인가요?(학교만 조회해 주세요.) -> 참새초등학교

3) 3번 게시글의 내용과 작성일이 무엇인가요?(내용과 작성일만 조회해 주세요.)->3번 게시글 null

4) 본인의 이름으로 프로필을 작성해 보세요.
{
  "data": {
    "createProfile": {
      "_id": null,
      "number": null,
      "message": "프로필이 정상적으로 등록되었습니다."
    }
  }
}

5) 본인의 이름으로 게시글을 작성해 보세요.
{
  "data": {
    "createBoard": {
      "_id": null,
      "number": 400,
      "message": "게시물이 정상적으로 등록되었습니다."
    }
  }
}

6) 자신의 프로필을 조회해 보세요.
{
  "data": {
    "fetchProfile": {
      "number": 92,
      "name": "장민정",
      "age": 35,
      "school": "중앙여고"
    }
  }
}

7) 자신의 게시글을 조회해 보세요.
{
  "data": {
    "fetchBoard": {
      "number": 400,
      "writer": "장민정",
      "title": "피곤한날",
      "contents": "주말에 쉬었어야 했다.",
      "like": 0,
      "createdAt": "2025-09-01T06:50:37.085Z"
    }
  }
}

8) 본인의 프로필에서, 학교를 자신이 졸업한 초등학교로 바꿔보세요.
{
  "data": {
    "updateProfile": {
      "_id": null,
      "number": null,
      "message": "프로필이 정상적으로 수정되었습니다."
    }
  }
}

9) 본인의 게시글에서, 제목과 내용을 바꿔보세요.
{
  "data": {
    "updateBoard": {
      "_id": null,
      "number": 400,
      "message": "게시물이 정상적으로 수정되었습니다."
    }
  }
}

10) 자신이 좋아하는 만화 주인공으로 프로필을 작성해 보세요.
{
  "data": {
    "createProfile": {
      "_id": null,
      "number": null,
      "message": "프로필이 정상적으로 등록되었습니다."
    }
  }
}

11) 위 10번에서 작성한 프로필을 삭제해 보세요.
{
  "data": {
    "deleteProfile": {
      "_id": null,
      "number": null,
      "message": "프로필이 정상적으로 삭제되었습니다."
    }
  }
}

12) 상품을 하나 만들어 보세요.
{
  "data": {
    "createProduct": {
      "_id": "0e83e0c9-88c9-4e69-b49e-d9b3596f22eb",
      "number": null,
      "message": "상품이 정상적으로 등록되었습니다."
    }
  }
}

13) 위 12번에서 만들었던 상품의 가격을 500원 인상해 보세요.
{
  "data": {
    "updateProduct": {
      "_id": "0e83e0c9-88c9-4e69-b49e-d9b3596f22eb",
      "number": null,
      "message": "상품이 정상적으로 수정되었습니다."
    }
  }
}

14) 위에서 만든 상품을 조회하되, 가격만 조회해 보세요.

{
  "data": {
    "fetchProduct": {
      "price": 300500
    }
  }
}

15) 조회했던 상품을 삭제해 보세요.
{
  "data": {
    "deleteProduct": {
      "_id": "0e83e0c9-88c9-4e69-b49e-d9b3596f22eb",
      "number": null,
      "message": "상품이 정상적으로 삭제되었습니다."
    }
  }
}

16) 삭제한 상품이 정말로 삭제되었는지 다시 한번 조회해 보세요.
{
  "data": {
    "fetchProduct": null
  }
}

17) 게시물 목록 중, 2페이지를 조회해 보세요.
{
  "data": {
    "fetchBoards": [
      {
        "number": 388,
        "writer": "최장원",
        "title": "이건 수정된 제목",
        "contents": "이건 수정된 내용",
        "like": 0,
        "createdAt": "2025-09-01T05:58:13.787Z"
      },
      {
        "number": 387,
        "writer": "한지연",
        "title": "안녕하세용오늘먹은메뉴는~",
        "contents": "칼국수?아니 돈가스였답니다~",
        "like": 0,
        "createdAt": "2025-09-01T05:56:43.542Z"
      },
      {
        "number": 386,
        "writer": "신유진",
        "title": "수정된 제목입니다.",
        "contents": "수정된 내용입니다.",
        "like": 0,
        "createdAt": "2025-09-01T05:55:39.777Z"
      },
      {
        "number": 385,
        "writer": "김가람",
        "title": "하이",
        "contents": "반가워요",
        "like": 0,
        "createdAt": "2025-09-01T05:54:52.030Z"
      },
      {
        "number": 384,
        "writer": "소준석",
        "title": "graphql 과제 중, 바뀐 제목입니다",
        "contents": "과제 중이고 내용 수정 테스트입니다",
        "like": 0,
        "createdAt": "2025-09-01T05:41:00.668Z"
      },
      {
        "number": 383,
        "writer": "김은경",
        "title": "벌써 과제 9번 문제",
        "contents": "얼른 끝나겠지?(๑•́o•̀๑)",
        "like": 0,
        "createdAt": "2025-09-01T05:38:20.174Z"
      },
      {
        "number": 382,
        "writer": "김가람",
        "title": "안녕하세요",
        "contents": "반갑습니다~~",
        "like": 0,
        "createdAt": "2025-09-01T05:32:17.753Z"
      },
      {
        "number": 379,
        "writer": "김라떼",
        "title": "레벨2",
        "contents": "레벨2 내용내용내용",
        "like": 0,
        "createdAt": "2025-09-01T05:24:46.524Z"
      },
      {
        "number": 377,
        "writer": "김소희",
        "title": "오늘의 숙제",
        "contents": "오늘의 숙제 제출",
        "like": 0,
        "createdAt": "2025-09-01T05:04:10.708Z"
      },
      {
        "number": 376,
        "writer": "성준",
        "title": "제목변경",
        "contents": "제목변경한내용",
        "like": 0,
        "createdAt": "2025-09-01T04:57:55.920Z"
      }
    ]
  }
}

18) 게시물 목록을 조회할 때, page를 입력하지 않으면, 어떤 결과가 발생하나요? ->에러발생

19) 프로필이 전체 몇 개가 있는지 확인해 보세요.
{
  "data": {
    "fetchProfilesCount": 72
  }
}

20) 게시물은 몇 개가 있나요?
{
  "data": {
    "fetchBoardsCount": 144
  }
}
---------------------------------------------------------------------
// ======================================================================
// graphql-API 문제
// ======================================================================
// http://backend-practice.codebootcamp.co.kr/graphql 에서 제공하는 API를 사용하세요.
// ======================================================================

1) createBoard를 활용해, 게시물을 하나 등록해 주세요.
{
  "data": {
    "createBoard": {
      "_id": "68b54a47db66590029998652",
      "writer": "장민정",
      "title": "배고프다",
      "contents": "저녁에 뭐먹지?",
      "likeCount": 0,
      "dislikeCount": 0,
      "images": [],
      "createdAt": "2025-09-01T07:24:55.327Z",
      "updatedAt": "2025-09-01T07:24:55.327Z"
    }
  }
}

2) 등록한 게시글의 제목과 내용은 무엇인가요?
{
  "data": {
    "fetchBoard": {
      "_id": "68b54a47db66590029998652",
      "title": "배고프다",
      "contents": "저녁에 뭐먹지?"
    }
  }
}

3) 등록한 게시글에 좋아요를 1 올려주세요.
{
  "data": {
    "likeBoard": 1
  }
}

4) 등록한 게시글에 싫어요도 1 올려주세요.
{
  "data": {
    "dislikeBoard": 1
  }
}
5) 등록한 게시글의 좋아요와 싫어요는 각각 몇 개 인가요? (fetchBoard를 활용해서 확인해 보세요.)
{
  "data": {
    "fetchBoard": {
      "likeCount": 1,
      "dislikeCount": 1
    }
  }
}

6) 현재 등록된 게시글의 총 갯수는 몇 개 인가요? (어떤 API를 활용하면 좋을지 찾아보세요!)
{
  "data": {
    "fetchBoardsCount": 14301
  }
}

7) 등록한 게시글의 제목을 수정해 보세요!
{
  "data": {
    "updateBoard": {
      "_id": "68b54a47db66590029998652",
      "writer": "장민정",
      "title": "맛있는게 뭐있을까?",
      "contents": "저녁에 뭐먹지?",
      "likeCount": 1,
      "dislikeCount": 1,
      "updatedAt": "2025-09-01T07:24:55.327Z",
      "createdAt": "2025-09-01T07:24:55.327Z"
    }
  }
}
8) fetchBoards 전체 게시물 조회를 활용하여 방금 쓴 게시물을 검색해 보세요.(search 변수를 활용해요!)
{
  "data": {
    "fetchBoards": [
      {
        "_id": "68b54a47db66590029998652",
        "writer": "장민정",
        "title": "맛있는게 뭐있을까?",
        "contents": "저녁에 뭐먹지?"
      }
    ]
  }
}
9) 등록한 게시글에 댓글을 3개 추가해 보세요.
{
  "data": {
    "createBoardComment": {
      "_id": "68b5502edb6659002999865d",
      "rating": 0.5,
      "contents": "한우드세요",
      "createdAt": "2025-09-01T07:50:06.823Z",
      "updatedAt": "2025-09-01T07:50:06.823Z"
    }
  }
}
{
  "data": {
    "createBoardComment": {
      "_id": "68b5504bdb6659002999865e",
      "rating": 0.2,
      "contents": "집에서 드세요",
      "createdAt": "2025-09-01T07:50:35.502Z",
      "updatedAt": "2025-09-01T07:50:35.502Z"
    }
  }
}
{
  "data": {
    "createBoardComment": {
      "_id": "68b55063db66590029998660",
      "rating": 0.1,
      "contents": "부모님과 드세요",
      "createdAt": "2025-09-01T07:50:59.381Z",
      "updatedAt": "2025-09-01T07:50:59.381Z"
    }
  }
}

10) 첫번째 댓글의 내용을 수정해 보세요!
{
  "data": {
    "updateBoardComment": {
      "_id": "68b5502edb6659002999865d",
      "contents": "한우맛있겠다",
      "rating": 0.5,
      "createdAt": "2025-09-01T07:50:06.823Z",
      "updatedAt": "2025-09-01T07:50:06.823Z"
    }
  }
}

11) 두번째 댓글을 삭제해 보세요!
{
  "data": {
    "deleteBoardComment": "68b5504bdb6659002999865e"
  }
}

12) 등록한 게시글에 달려있는 모든 댓글을 조회해 보세요.(작성자와 내용만 조회합니다.)
{
  "data": {
    "fetchBoardComments": [
      {
        "writer": "장민정",
        "contents": "부모님과 드세요"
      },
      {
        "writer": "장민정",
        "contents": "한우맛있겠다"
      }
    ]
  }
}

13) BEST게시글을 조회해 보세요! (API 이름을 잘 찾아보세요!)

{
  "data": {
    "fetchBoardsOfTheBest": [
      {
        "_id": "666ae8b25d6eaa0029f7f74d",
        "title": "짱구에서 편지 받고 우는 철수",
        "contents": "극장판 짱구에서 편지 받고 우는 철수",
        "likeCount": 169,
        "dislikeCount": 15
      },
      {
        "_id": "68ad89cddb66590029998617",
        "title": "안녕핫에ㅛ",
        "contents": "<h1><em>반값스빈다다</em></h1>",
        "likeCount": 93,
        "dislikeCount": 0
      },
      {
        "_id": "652a2ce25d6eaa0029f7bc51",
        "title": "다들 점심은 뭘 드셨나요?",
        "contents": "<p>저는 그냥 대충 먹었어요...</p>",
        "likeCount": 92,
        "dislikeCount": 3
      },
      {
        "_id": "65bdbadc5d6eaa0029f7dc1c",
        "title": "123",
        "contents": "213",
        "likeCount": 69,
        "dislikeCount": 42
      }
    ]
  }
}
14) 회원가입을 해보세요! 사용자, 즉 User를 만드는 API입니다!
{
  "data": {
    "createUser": {
      "_id": "68b552b7db66590029998662",
      "email": "mjjang7569@gmail.com",
      "name": "장민정",
      "createdAt": "2025-09-01T08:00:55.584Z"
    }
  }
}
